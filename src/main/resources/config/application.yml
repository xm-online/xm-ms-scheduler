management:
    endpoints:
        web:
            base-path: /management
            exposure:
                include:
                    - configprops
                    - env
                    - health
                    - info
                    - threaddump
                    - logfile
                    - jhimetrics
                    - prometheus
    endpoint:
        health:
            show-details: when_authorized
            roles: 'SUPER-ADMIN'
            probes:
                enabled: true
            group:
                liveness:
                    include: livenessState
                readiness:
                    include: readinessState,db
        jhimetrics:
            enabled: true
    info:
        git:
            mode: full
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
    observations:
        key-values:
            application: ${spring.application.name}
    prometheus:
        metrics:
            export:
                enabled: true
                step: 60
    metrics:
        enable:
            http: true
            jvm: true
            logback: true
            process: true
            system: true
        distribution:
            percentiles-histogram:
                all: true
            percentiles:
                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
        tags:
            application: ${spring.application.name}

spring:
    application:
        name: scheduler
    main:
        allow-bean-definition-overriding: true
        web-application-type: servlet
    cloud:
        consul:
            enabled: true
            discovery:
                healthCheckPath: /management/health
                instanceId: ${spring.application.name}:${spring.application.instance-id:${random.value}}
                service-name: ${spring.application.name}
            config:
                watch:
                    enabled: false

    jackson:
        serialization.write_dates_as_timestamps: false
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    messages:
        basename: i18n/messages
    thymeleaf:
        mode: HTML
    kafka:
        consumer:
            group-id: ${spring.application.name}
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        listener:
            concurrency: 16
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.apache.kafka.common.serialization.StringSerializer
    liquibase:
        default-schema: XM
        change-log: classpath:config/liquibase/master.xml
        enabled: true

security:
    basic:
        enabled: false
    oauth2:
        resource:
            filter-order: 3

server:
    servlet:
        session:
            cookie:
                http-only: true

# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    clientApp:
        name: 'schedulerApp'
    api-docs:
        default-include-pattern: ${server.servlet.context-path:}/api/**
        management-include-pattern: ${server.servlet.context-path:}/management/**
        title: Scheduler API
        description: Scheduler API documentation
    security:
        content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com data:"


# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

xm-config:
    enabled: true
    configMode: FILE
    configDirPath: D:\work\IdeaProjects\dila\dila-config-repository
    kafka-config-topic: config_topic

application:
    tenant-ignored-path-list: /swagger-resources/configuration/ui, /management/health, /oauth/token_key, /h2-console
    timeline-ignored-http-methods:
    stream-binding-enabled: true
    kafka-enabled: true
    kafka-system-topic: system_topic
    kafka-system-queue: system_queue
    db-schema-suffix:
    scheduler:
        thread-pool-size: 5
    retry:
        max-attempts: 3
        delay: 1000 #in milliseconds
        multiplier: 2
    kafkaMetric:
        enabled: true
        connectionTimeoutTopic: 1000
        metricTopics: system_topic

gracefulShutdown:
    enabled: false
    shutdownDelay:
